-- -------------------------------------------------------------
-- 
-- File Name: /home/matt/OPV_TX_abraxas3d/create-even-and-odd-HDL/hdlsrc/opv_pluto_transmitter_HDL_coder_input/opv_modul_ip_dut.vhd
-- Created: 2024-04-20 21:17:07
-- 
-- Generated by MATLAB 9.14 and HDL Coder 4.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: opv_modul_ip_dut
-- Source Path: opv_modul_ip/opv_modul_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY opv_modul_ip_dut IS
  PORT( In1_0                             :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        In1_1                             :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        bo_bitstream                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        be_bitstream                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END opv_modul_ip_dut;


ARCHITECTURE rtl OF opv_modul_ip_dut IS

  -- Component Declarations
  COMPONENT opv_modul_ip_src_create_even_and_odd
    PORT( In1_0                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          In1_1                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          bo_bitstream                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          be_bitstream                    :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : opv_modul_ip_src_create_even_and_odd
    USE ENTITY work.opv_modul_ip_src_create_even_and_odd(rtl);

  -- Signals
  SIGNAL bo_bitstream_sig                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL be_bitstream_sig                 : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_opv_modul_ip_src_create_even_and_odd : opv_modul_ip_src_create_even_and_odd
    PORT MAP( In1_0 => In1_0,  -- ufix9
              In1_1 => In1_1,  -- ufix9
              bo_bitstream => bo_bitstream_sig,  -- sfix16_En15
              be_bitstream => be_bitstream_sig  -- sfix16_En15
              );

  bo_bitstream <= bo_bitstream_sig;

  be_bitstream <= be_bitstream_sig;

END rtl;

